plugins {
    id 'java'
    id 'org.spongepowered.gradle.vanilla' version '0.2.1-SNAPSHOT'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'maven-publish'
}

archivesBaseName = "${mod_name}-common-${minecraft_version}"

repositories {
    mavenCentral()
}

configurations {
    shade
}

minecraft {
    version(minecraft_version)
    runs {
        if (project.hasProperty('common_runs_enabled') ? project.findProperty('common_runs_enabled').toBoolean() : true) {

            server(project.hasProperty('common_server_run_name') ? project.findProperty('common_server_run_name') : 'vanilla_server') {
                workingDirectory(this.file("run"))
            }
            client(project.hasProperty('common_client_run_name') ? project.findProperty('common_client_run_name') : 'vanilla_client') {
                workingDirectory(this.file("run"))
            }
        }
    }
}

dependencies {
    compileOnly group: 'org.spongepowered', name: 'mixin', version: '0.8.4'
    implementation group: 'net.openhft', name: 'zero-allocation-hashing', version: '0.15'

}

shadowJar {
    classifier = ''
    configurations = [project.configurations.shade]
    relocate 'net.openhft', "${project.group}.shadow.net.openhft"
}

processResources {

    def buildProps = project.properties.clone()

    filesMatching(['pack.mcmeta']) {

        expand buildProps
    }
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            from components.java
        }
    }

    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
    }
}